version: '3.8'
services:
    web:
        image: nginx:1.25.3-alpine
        container_name: sb-web
        working_dir: /app
        volumes:
            - ./docker/development/nginx/config.conf:/etc/nginx/conf.d/default.conf
            - .:/app
        networks:
            - app-net
        ports:
            - $APP_PORT:80
        depends_on:
            - php

    php:
        container_name: sb-php
        working_dir: /app
        user: $DOCKER_USER
        volumes:
            - .:/app
        build:
            context: .
            dockerfile: ./docker/development/php/Dockerfile
        networks:
            - app-net
        depends_on:
            database:
                condition: service_healthy
            database-test:
                condition: service_healthy
            redis:
                condition: service_healthy

    database:
        container_name: sb-database
        working_dir: /app
        image: postgres:16.1-alpine3.19
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            PGPORT: ${DB_PORT}
        volumes:
            - db_data:/var/lib/postgresql/data
        networks:
            - app-net
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
            interval: 5s
            timeout: 5s
            retries: 5

    database-test:
        container_name: sb-database-test
        working_dir: /app
        image: postgres:16.1-alpine3.19
        environment:
            POSTGRES_DB:  ${DB_TEST_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            PGPORT: ${DB_TEST_PORT}
        volumes:
            - db_test_data:/var/lib/postgresql/data
        networks:
            - app-net
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
            interval: 5s
            timeout: 5s
            retries: 5

    pgadmin:
        image: dpage/pgadmin4
        container_name: sb-pgadmin
        ports:
            - "8888:80"
        networks:
            - app-net
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
        volumes:
            - pgadmin_data:/var/lib/pgadmin

    redis:
        image: redis:7.2.3-alpine
        container_name: sb-redis
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"

        networks:
            - app-net
        volumes:
            - redis_data:/data
        healthcheck:
            test: ["CMD", "redis-cli","ping"]
            interval: 5s
            timeout: 5s
            retries: 5

    node:
        build:
            context: .
            dockerfile: ./docker/development/node/Dockerfile
        container_name: sb-node
        working_dir: /app
        user: $DOCKER_USER
        tty: true
        ports:
            - $NODE_PORT:$NODE_PORT
        volumes:
            - .:/app
        networks:
            - app-net

networks:
    app-net:
        driver: bridge

volumes:
    db_data:
    db_test_data:
    redis_data:
    pgadmin_data: